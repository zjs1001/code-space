(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{414:function(t,s,a){"use strict";a.r(s);var e=a(2),v=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"一、前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、前言"}},[t._v("#")]),t._v(" 一、前言")]),t._v(" "),s("blockquote",[s("p",[t._v("收集于热心肠之人的经历")])]),t._v(" "),s("h3",{attrs:{id:"二、原题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、原题"}},[t._v("#")]),t._v(" 二、原题")]),t._v(" "),s("h4",{attrs:{id:"_1、讲讲事件循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、讲讲事件循环"}},[t._v("#")]),t._v(" 1、讲讲事件循环")]),t._v(" "),s("p",[t._v("JavaScript是一门单线程语音，异步操作都是放到事件循环队列中，等待主执行栈来执行的，没有专门的异步执行线程。")]),t._v(" "),s("p",[t._v("一、同步和异步")]),t._v(" "),s("p",[t._v("​\t\t所谓单线程，就是同步队列和异步队列，js代码是自上而下执行的，在主线程中立即执行的就是同步任务，比如简单的逻辑操作以及函数。而异步任务不会马上执行，会被放到异步队列中，比如ajax、promise、事件、计时器等。")]),t._v(" "),s("p",[t._v("​\t\t也就是说，先执行同步，主线程结束后再按照异步的顺序再次执行。")]),t._v(" "),s("p",[t._v("二、事件循环（Event Loop）")]),t._v(" "),s("p",[t._v("​\t\t事件循环即等待主线程中的任务全部完成后，把异步队列中的任务放到主线程中继续运行，当前线程中的任务完成后继续向异步队列中寻找任务，若有则继续往复将之放到主线程中运行。由此，则形成了循环。")]),t._v(" "),s("p",[t._v("三、宏任务（Marco Taks）和微任务（Micro Task）")]),t._v(" "),s("p",[t._v("​\t\t宏任务和微任务都为异步任务，都属于异步队列，而且在队列中，先执行微任务，再执行宏任务。")]),t._v(" "),s("p",[t._v("​\t\t宏任务主要包含：setTimeout、setInterval、script(整体代码)、I/O、UI 交互事件、setImmediate(Node.js 环境)")]),t._v(" "),s("p",[t._v("​\t\t微任务主要包含：Promise.then、Object.observe、MutationObserver、process.nextTick(Node.js 环境)")]),t._v(" "),s("h4",{attrs:{id:"_2、事件委托"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、事件委托"}},[t._v("#")]),t._v(" 2、事件委托")]),t._v(" "),s("p",[s("strong",[t._v("事件冒泡：")])]),t._v(" "),s("p",[t._v("​\t\tJS中当出发某些具有冒泡性质的事件是，首先在触发元素寻找是否有相应的注册事件，如果没有再继续向上级父元素寻找是否有相应的注册事件作出相应，这就是事件冒泡。")]),t._v(" "),s("p",[s("strong",[t._v("事件委托：")])]),t._v(" "),s("p",[t._v("​\t\t利用事件冒泡的特性，将本应该注册在子元素上的处理事件注册在父元素上，这样点击子元素时发现其本身没有相应事件就到父元素上寻找作出相应。")]),t._v(" "),s("p",[t._v("这样做的优势有：")]),t._v(" "),s("p",[t._v("1.减少DOM操作，提高性能。")]),t._v(" "),s("p",[t._v("2.随时可以添加子元素，添加的子元素会自动有相应的处理事件。")]),t._v(" "),s("p",[t._v("适合用事件委托的事件：click，mousedown，mouseup，keydown，keyup，keypress。")]),t._v(" "),s("p",[s("strong",[t._v("Tips:")]),t._v(" mouseover和mouseout虽然也有事件冒泡，但是处理它们的时候需要特别的注意，因为需要经常计算它们的位置，处理起来不太容易。")]),t._v(" "),s("h4",{attrs:{id:"_3、sass和less的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、sass和less的区别"}},[t._v("#")]),t._v(" 3、sass和less的区别")]),t._v(" "),s("p",[s("strong",[t._v("共同点：")])]),t._v(" "),s("p",[t._v("sass和less都是css的预编译处理语言，他们引入了mixins，参数，嵌套规则，运算，颜色，名字空间，作用域，JavaScript赋值等 加快了css开发效率,")]),t._v(" "),s("p",[t._v("当然这两者都可以配合gulp和grunt等前端构建工具使用")]),t._v(" "),s("p",[s("strong",[t._v("主要区别:")])]),t._v(" "),s("p",[t._v("1.编译环境不一样：")]),t._v(" "),s("p",[t._v("​\t\tsass的安装需要Ruby环境的，是在服务端上处理的，而Less是需要引入less.js来处理Less代码输出css到浏览器，也可以在开发环节使用Less，然后编译成css文件，直接放到项目中。")]),t._v(" "),s("p",[t._v("2.变量符不一样：")]),t._v(" "),s("p",[t._v("​\t\tLess是@，而Scss是$")]),t._v(" "),s("p",[t._v("3.输出设置：")]),t._v(" "),s("p",[t._v("​\t\tSass提供4中输出选项：nested, compact, compressed 和 expanded.")]),t._v(" "),s("p",[t._v("4.Sass支持条件语句，可以使用if{}else{},for{}循环等等。而Less不支持。")]),t._v(" "),s("p",[t._v("5.引用外部CSS文件：")]),t._v(" "),s("p",[t._v("​\t\tscss引用的外部文件命名必须以开头, 文件名如果以下划线开头的话，Sass会认为该文件是一个引用文件，不会将其编译为css文件.")]),t._v(" "),s("p",[t._v("6.Sass和Less的工具库不同：")]),t._v(" "),s("p",[t._v("​\t\tSass有工具库Compass")]),t._v(" "),s("p",[t._v("​\t\tLess有UI组件库Bootstrap")]),t._v(" "),s("h4",{attrs:{id:"_4、http的状态码、http缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、http的状态码、http缓存"}},[t._v("#")]),t._v(" 4、http的状态码、http缓存")]),t._v(" "),s("h5",{attrs:{id:"http的状态码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http的状态码"}},[t._v("#")]),t._v(" http的状态码")]),t._v(" "),s("p",[s("strong",[t._v("状态码分为5类：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("1**")]),t._v(" "),s("th",[t._v("信息，服务器收到请求，需要请求者继续执行操作")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("2**")]),t._v(" "),s("td",[t._v("成功，操作被成功接收并处理")])]),t._v(" "),s("tr",[s("td",[t._v("3**")]),t._v(" "),s("td",[t._v("重定向，需要进一步的操作以完成请求")])]),t._v(" "),s("tr",[s("td",[t._v("4**")]),t._v(" "),s("td",[t._v("客户端错误，请求包含语法错误或无法完成请求")])]),t._v(" "),s("tr",[s("td",[t._v("5**")]),t._v(" "),s("td",[t._v("服务器错误，服务器在处理请求的过程中发生了错误")])])])]),t._v(" "),s("p",[s("strong",[t._v("301：")])]),t._v(" "),s("p",[t._v("​\t\t（永久移动）请求的网页已被永久移动到新位置。服务器返回此响应（作为对GET或HEAD请求的响应）时，会自动将请求者转到新位置。")]),t._v(" "),s("p",[s("strong",[t._v("302：")])]),t._v(" "),s("p",[t._v("​\t\t（临时移动）服务器目前正从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。此代码与响应GET和HEAD请求的301代码类似，会自动将请求者转到不同的位置。")]),t._v(" "),s("p",[s("strong",[t._v("304")]),t._v("：")]),t._v(" "),s("p",[t._v("​\t\t响应禁止包含消息体，如果客户端发送了一个带条件的 GET 请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变，则服务器应当返回这个状态码。")]),t._v(" "),s("p",[t._v("**305：**被请求的资源必须通过指定的代理才能被访问。")]),t._v(" "),s("p",[s("strong",[t._v("400：")])]),t._v(" "),s("p",[t._v("​\t\t语义有误，当前请求无法被服务器理解。除非进行修改，否则客户端不应该重复提交这个请求，或者请求参数有误。")]),t._v(" "),s("p",[s("strong",[t._v("403")]),t._v("：服务器已经理解请求，但是拒绝执行它。")]),t._v(" "),s("p",[t._v("**404：**请求失败，请求所希望得到的资源未被在服务器上发现。")]),t._v(" "),s("p",[s("strong",[t._v("500：")])]),t._v(" "),s("p",[t._v("​\t\t服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理。一般来说，这个问题都会在服务器端的源代码出现错误时出现。")]),t._v(" "),s("h5",{attrs:{id:"http缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http缓存"}},[t._v("#")]),t._v(" http缓存")]),t._v(" "),s("p",[s("strong",[t._v("http缓存请求/响应头：")])]),t._v(" "),s("p",[t._v("​\t"),s("strong",[t._v("1、Cache-Control")])]),t._v(" "),s("p",[t._v("​\t\t\t请求/响应头，缓存控制字段，可以说是控制http缓存的最高指令，要不要缓存也是它说了算。")]),t._v(" "),s("p",[t._v("​\t\t\t它有以下常用值")]),t._v(" "),s("p",[t._v("1.1 no-store：所有内容都不缓存")]),t._v(" "),s("p",[t._v("1.2 no-cache：缓存，但是浏览器使用缓存前，都会请求服务器判断缓存资源是否是最新，它是个比较高贵的存在，因为它只用不过期的缓存。")]),t._v(" "),s("p",[t._v("1.3  max-age=x(单位秒) 请求缓存后的X秒不再发起请求，属于http1.1属性，与下方Expires(http1.0属性)类似，但优先级要比Expires高。")]),t._v(" "),s("p",[t._v("1.4 s-maxage=x(单位秒) 代理服务器请求源站缓存后的X秒不再发起请求，只对CDN缓存有效(这个在后面会细说)")]),t._v(" "),s("p",[t._v("1.5 public 客户端和代理服务器(CDN)都可缓存")]),t._v(" "),s("p",[t._v("1.6 private 只有客户端可以缓存")]),t._v(" "),s("p",[t._v("​\t"),s("strong",[t._v("2.Expires")]),t._v(" 响应头，代表资源过期时间，由服务器返回提供，GMT格式日期，是http1.0的属性，在与max-age(http1.1)共存的情况下，优先级要低。")]),t._v(" "),s("p",[t._v("​\t"),s("strong",[t._v("3.Last-Modified")]),t._v(" 响应头，资源最新修改时间，由服务器告诉浏览器。")]),t._v(" "),s("p",[t._v("**\t4.if-Modified-Since** 请求头，资源最新修改时间，由浏览器告诉服务器(其实就是上次服务器给的Last-Modified，请求又还给服务器对比)，和Last-Modified是一对，它两会进行对比。")]),t._v(" "),s("p",[t._v("​\t"),s("strong",[t._v("5.Etag")]),t._v(" 响应头，资源标识，由服务器告诉浏览器。")]),t._v(" "),s("p",[t._v("​\t"),s("strong",[t._v("6.if-None-Match")]),t._v(" 请求头，缓存资源标识，由浏览器告诉服务器(其实就是上次服务器给的Etag)，和Etag是一对，它两会进行对比。")]),t._v(" "),s("p",[s("strong",[t._v("http缓存方案：")])]),t._v(" "),s("p",[s("strong",[t._v("1.md5/hash缓存")])]),t._v(" "),s("p",[t._v("不推荐缓存html文件，这样每次html加载渲染都可以感知文件变化，反正文件没变还是使用本地缓存，文件名都变了说明修改过，重新请求缓存就好了。")]),t._v(" "),s("p",[s("strong",[t._v("2.CDN缓存(作为了解)")])]),t._v(" "),s("p",[t._v("1.CDN通过分流的形式，大大减轻源站的访问压力。")]),t._v(" "),s("p",[t._v("2.CDN也解决了跨地区访问问题，根本上为访问提供了加速。")]),t._v(" "),s("p",[s("strong",[t._v("强缓存与协商性缓存(弱缓存)")])]),t._v(" "),s("p",[t._v("了解了上面不同浏览器行为对http缓存的不同影响，理解强缓存与协商性缓存就很容易了。")]),t._v(" "),s("p",[s("strong",[t._v("强缓存：")])]),t._v(" "),s("p",[t._v("不发起http请求，直接使用本地缓存，比如浏览器地址栏回车，使用浏览器的刷新按钮，在Expires或max-age生效的情况下，触发的都是强缓存。")]),t._v(" "),s("p",[s("strong",[t._v("协商性缓存(弱缓存)：")])]),t._v(" "),s("p",[t._v("在使用本地缓存前，先与服务器协商，核对缓存文件是否为最新。比如设置了cache-control=no-cache，不管你做任何操作，都会发起请求，这一类就是协商性缓存了。")]),t._v(" "),s("h4",{attrs:{id:"_5、js的基本数据类型和引用类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、js的基本数据类型和引用类型"}},[t._v("#")]),t._v(" 5、js的基本数据类型和引用类型")]),t._v(" "),s("p",[s("strong",[t._v("值类型(基本类型)：")])]),t._v(" "),s("p",[t._v("字符串（String）、数字(Number)、布尔(Boolean)、对空（Null）、未定义（Undefined）、Symbol。")]),t._v(" "),s("p",[s("strong",[t._v("引用数据类型：")])]),t._v(" "),s("p",[t._v("对象(Object)、数组(Array)、函数(Function)。")]),t._v(" "),s("h4",{attrs:{id:"_6、说说js缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、说说js缓存"}},[t._v("#")]),t._v(" 6、说说js缓存")]),t._v(" "),s("p",[s("strong",[t._v("缓存的好处：")])]),t._v(" "),s("p",[t._v("(1).当页面渲染的数据过多时，为了减轻对内存的占用，对初次接收且会用到的数据进行本地缓存，是有着大好处的.")]),t._v(" "),s("p",[t._v("(2).受网速等各种因素的影响，当渲染数据过多时，若存在频繁的切换页面，用户体验效果不佳。")]),t._v(" "),s("p",[s("strong",[t._v("本地存储")])]),t._v(" "),s("p",[t._v("storage来对数据进行存储(sessionStorage、localStorage）")]),t._v(" "),s("p",[s("strong",[t._v("sessionStorage")])]),t._v(" "),s("p",[t._v("临时的会话存储，只要当前的会话窗口未关闭，存储的信息就不会丢失，即便刷新了页面或者在编辑器中更改了代码，存储的会话信息也不会丢失。")]),t._v(" "),s("p",[s("strong",[t._v("localStorage")])]),t._v(" "),s("p",[t._v("不主动去清除，会一直将数据存储在客户端的储存方式，即使关闭了浏览器，下次打开的时候仍然可以看到之前存储的未主动清除的数据（即便是")]),t._v(" "),s("p",[t._v("杀毒软件或者浏览器自带的清除功能，也不能将localStorage存储的数据清除掉）")]),t._v(" "),s("p",[t._v("storage存储的数据只能是字符串类型，其他类型的数据需做类型转换")]),t._v(" "),s("p",[t._v("storage直接属于顶层对象window.")]),t._v(" "),s("p",[s("strong",[t._v("cookie")])]),t._v(" "),s("p",[t._v("cookie属于较老且最常见用的最多的技术了，cookie的优点很多，用起来也比较方便")]),t._v(" "),s("p",[t._v("cookie缺陷：4kb，cookie本地存储的数据会被发送到服务器")]),t._v(" "),s("p",[s("strong",[t._v("cookie和storage的区别")])]),t._v(" "),s("p",[t._v("1.cookie兼容所有的浏览器（本地cookie谷歌不支持），storage不支持IE6~8;")]),t._v(" "),s("p",[t._v("2.二者对存储的内容均有大小限制，前者同源情况写一般不能存储4kb的内容，后者同源一般能存储只能存储5MB的数据")]),t._v(" "),s("p",[t._v("3.cookie有过期时间，localStorage是永久存储（如果你不手动去删除的话）")]),t._v(" "),s("p",[t._v("4.一些浏览器处于安全的角度可能会禁用cookie,但无法禁用localStorage")]),t._v(" "),s("h4",{attrs:{id:"_7、浏览器的重绘与回流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、浏览器的重绘与回流"}},[t._v("#")]),t._v(" 7、浏览器的重绘与回流")]),t._v(" "),s("p",[s("strong",[t._v("重绘不一定需要重排（比如颜色的改变）")])]),t._v(" "),s("p",[s("strong",[t._v("重排(回流)必然导致重绘（比如改变网页位置）")])]),t._v(" "),s("p",[s("strong",[t._v("重排(Reflow)(回流)：")])]),t._v(" "),s("p",[t._v("当渲染树的一部分必须更新并且节点的尺寸发生了变化，浏览器会使渲染树中受到影响的部分失效，并重新构造渲染树。")]),t._v(" "),s("p",[s("strong",[t._v("重绘(Repaint)：")])]),t._v(" "),s("p",[t._v("是在一个元素的外观被改变所触发的浏览器行为，浏览器会根据元素的新属性重新绘制，使元素呈现新的外观。比如改变某个元素的背景色、文字颜色、边框颜色等等")]),t._v(" "),s("p",[s("strong",[t._v("减少重排次数和缩小重排影响范围解决方式：")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("将多次改变样式属性的操作，合成一次操作。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" changeDiv "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("‘changeDiv’"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    changeDiv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ‘#"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("093")]),t._v("′"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    changeDiv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("background "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ‘#eee'"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    changeDiv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ‘200px'"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("可以合并为：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token style"}},[s("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n     "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div.changeDiv")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #eee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #093"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("‘changeDiv’"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("className "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ‘changeDiv'"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("将需要多次重排的元素,嗯，position属性。设为absolute。或fixed。使其脱离文档流，这样，他的变化就不会影响到其他的元素。例如有动画效果的元素设置为绝对定位")])]),t._v(" "),s("li",[s("p",[t._v("在内存中多次操作节点。完成后再添加到文档中去。例如要异步获取表格数据，渲染到页面。可以先取得数据后在内存中构建整个表格的html片段，再一次性添加到文档中去，而不是循环添加每一行。")])]),t._v(" "),s("li",[s("p",[t._v("如果对一个元素进行复杂的操作，可以将display属性设为none嗯使其隐藏。操作完后再显示。这样只在隐藏和显示时触发2次重排。")])]),t._v(" "),s("li",[s("p",[t._v("在需要经常获取那些引起浏览器重排的属性值时，要缓存到变量。")])])]),t._v(" "),s("h4",{attrs:{id:"_8、用css隐藏dom的几种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、用css隐藏dom的几种方式"}},[t._v("#")]),t._v(" 8、用css隐藏dom的几种方式")]),t._v(" "),s("p",[t._v("**方式一：**display:none")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".hide")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("none"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("将元素设置为display:none后，元素在页面上将彻底消失，元素本来占有的空间就会被其他元素占有，也就是说它会导致浏览器的重排和重绘。")]),t._v(" "),s("p",[s("strong",[t._v("方式二：visibility:hidden")])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".hidden")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("visibility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("hidden\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("元素在页面消失后，其占据的空间依旧会保留着，所以它只会导致浏览器重绘而不会重排。")]),t._v(" "),s("p",[t._v("**方式三：**opacity:0")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".transparent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("设置透明度为0后，元素只是隐身了，它依旧存在页面中。")]),t._v(" "),s("p",[t._v("**方式四：**设置height，width等盒模型属性为0")]),t._v(" "),s("h4",{attrs:{id:"_9、vue父子组件的生命周期过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9、vue父子组件的生命周期过程"}},[t._v("#")]),t._v(" 9、vue父子组件的生命周期过程")]),t._v(" "),s("p",[t._v("**加载渲染阶段：**父beforeCreate->父created->父beforeMount->子beforeCreate->子created->子beforeMount->子mounted->父mounted。")]),t._v(" "),s("p",[t._v("​\t\t总结：渲染开始：先父后子。渲染完成：先子后父")]),t._v(" "),s("p",[t._v("**子组件更新过程：**父beforeUpdate->子beforeUpdate->子updated->父updated")]),t._v(" "),s("p",[t._v("​\t\t总结：更新开始：先父后子。更新完成：先子后父")]),t._v(" "),s("p",[t._v("**销毁过程：**父beforeDestroy->子beforeDestroy->子destroyed->父destroyed")]),t._v(" "),s("p",[t._v("​\t\t总结：销毁开始：先父后子。销毁完成：先子后父")]),t._v(" "),s("h4",{attrs:{id:"_10、vue的双向绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10、vue的双向绑定"}},[t._v("#")]),t._v(" 10、vue的双向绑定")]),t._v(" "),s("p",[s("strong",[t._v("vue2.x")]),t._v("版本的数据双向绑定主要通过Object.defineProperty()方法来进行数据劫持以及发布者-订阅模式来实现的。")]),t._v(" "),s("p",[s("strong",[t._v("概括描述：")])]),t._v(" "),s("p",[t._v("1.实现一个监听器Observer，用来劫持并监听所有属性，如果有变动的，就通知订阅者。")]),t._v(" "),s("p",[t._v("2.实现一个订阅者Watcher，可以收到属性的变化通知并执行相应的函数，从而更新视图。")]),t._v(" "),s("p",[t._v("3.实现一个解析器Compile，可以扫描和解析每个节点的相关指令，并根据初始化模板数据以及初始化相应的订阅器。")]),t._v(" "),s("p",[s("strong",[t._v("vue3.x")]),t._v("采用数据劫持结合发布者-订阅者模式的方式，通过new Proxy()来劫持各个属性的setter，getter，在数据变动时发布消息给订阅者，触发相应的监听回调。")]),t._v(" "),s("p",[t._v("**小结：**Vue 3.0与Vue 2.0的区别仅是数据劫持的方式由Object.defineProperty更改为Proxy代理，其他代码不变。")]),t._v(" "),s("h4",{attrs:{id:"_11、虚拟dom性能好在哪里"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11、虚拟dom性能好在哪里"}},[t._v("#")]),t._v(" 11、虚拟dom性能好在哪里")]),t._v(" "),s("p",[s("strong",[t._v("优势：")])]),t._v(" "),s("ol",[s("li",[t._v("虚拟DOM不会立马进行重排和重绘操作")]),t._v(" "),s("li",[t._v("虚拟 DOM 进行频繁修改，然后一次性比较并修改真实 DOM 中需要改的部分，最后在真实 DOM 中进行排版与重绘，减少过多DOM节点排版与重绘损耗")]),t._v(" "),s("li",[t._v("虚拟 DOM 有效降低大面积真实 DOM 的重绘与排版，因为最终与真实 DOM 比较差异，可以只渲染局部")])]),t._v(" "),s("p",[s("strong",[t._v("缺点：")])]),t._v(" "),s("p",[t._v("1、无法进行极致优化：虽然虚拟 DOM + 合理的优化，足以应对绝大部分应用的性能需求，但在一些性能要求极高的应用中虚拟 DOM 无法进行针对性的极致优化。")]),t._v(" "),s("p",[t._v("2、首次渲染大量DOM时，由于多了一层虚拟DOM的计算，会比innerHTML插入慢。")]),t._v(" "),s("h4",{attrs:{id:"_12、有了解过diff算法吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12、有了解过diff算法吗"}},[t._v("#")]),t._v(" 12、有了解过diff算法吗")]),t._v(" "),s("p",[s("strong",[t._v("diff 算法是什么：")])]),t._v(" "),s("p",[t._v("​\t\t"),s("code",[t._v("diff")]),t._v(" 算法是一种通过同层的树节点进行比较的高效算法")]),t._v(" "),s("p",[t._v("其有两个特点：")]),t._v(" "),s("ul",[s("li",[t._v("比较只会在同层级进行, 不会跨层级比较")]),t._v(" "),s("li",[t._v("在diff比较的过程中，循环从两边向中间比较")])]),t._v(" "),s("p",[s("code",[t._v("diff")]),t._v(" 算法在很多场景下都有应用，在 "),s("code",[t._v("vue")]),t._v(" 中，作用于虚拟 "),s("code",[t._v("dom")]),t._v(" 渲染成真实 "),s("code",[t._v("dom")]),t._v(" 的新旧 "),s("code",[t._v("VNode")]),t._v(" 节点比较")]),t._v(" "),s("p",[s("strong",[t._v("比较方式：")])]),t._v(" "),s("p",[s("code",[t._v("diff")]),t._v("整体策略为：深度优先，同层比较")]),t._v(" "),s("ol",[s("li",[t._v("比较只会在同层级进行, 不会跨层级比较")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static001.infoq.cn/resource/image/91/54/91e9c9519a11caa0c5bf70714383f054.png",alt:"img"}})]),t._v(" "),s("ol",[s("li",[t._v("比较的过程中，循环从两边向中间收拢")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static001.infoq.cn/resource/image/2d/ec/2dcd6ad5cf82c65b9cfc43a27ba1e4ec.png",alt:"img"}})]),t._v(" "),s("p",[t._v("下面举个"),s("code",[t._v("vue")]),t._v("通过"),s("code",[t._v("diff")]),t._v("算法更新的例子：")]),t._v(" "),s("p",[t._v("新旧"),s("code",[t._v("VNode")]),t._v("节点如下图所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static001.infoq.cn/resource/image/80/6d/80dc339f73b186479e6d1fc18bfbf66d.png",alt:"img"}})]),t._v(" "),s("p",[t._v("第一次循环后，发现旧节点D与新节点D相同，直接复用旧节点D作为"),s("code",[t._v("diff")]),t._v("后的第一个真实节点，同时旧节点"),s("code",[t._v("endIndex")]),t._v("移动到C，新节点的 "),s("code",[t._v("startIndex")]),t._v(" 移动到了 C")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static001.infoq.cn/resource/image/76/54/76032c78c8ef74047efd42c070e48854.png",alt:"img"}})]),t._v(" "),s("p",[t._v("第二次循环后，同样是旧节点的末尾和新节点的开头(都是 C)相同，同理，"),s("code",[t._v("diff")]),t._v(" 后创建了 C 的真实节点插入到第一次创建的 D 节点后面。同时旧节点的 "),s("code",[t._v("endIndex")]),t._v(" 移动到了 B，新节点的 "),s("code",[t._v("startIndex")]),t._v(" 移动到了 E")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static001.infoq.cn/resource/image/1c/d7/1c76e7489660188d35f0a38ea8c8ecd7.png",alt:"img"}})]),t._v(" "),s("p",[t._v("第三次循环中，发现E没有找到，这时候只能直接创建新的真实节点 E，插入到第二次创建的 C 节点之后。同时新节点的 "),s("code",[t._v("startIndex")]),t._v(" 移动到了 A。旧节点的 "),s("code",[t._v("startIndex")]),t._v(" 和 "),s("code",[t._v("endIndex")]),t._v(" 都保持不动")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static001.infoq.cn/resource/image/4b/08/4b622c0d61673ec5474465d82305d308.png",alt:"img"}})]),t._v(" "),s("p",[t._v("第四次循环中，发现了新旧节点的开头(都是 A)相同，于是 "),s("code",[t._v("diff")]),t._v(" 后创建了 A 的真实节点，插入到前一次创建的 E 节点后面。同时旧节点的 "),s("code",[t._v("startIndex")]),t._v(" 移动到了 B，新节点的"),s("code",[t._v("startIndex")]),t._v(" 移动到了 B")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static001.infoq.cn/resource/image/59/b4/5982417c3e0b2fa9ae940354a0e67ab4.png",alt:"img"}})]),t._v(" "),s("p",[t._v("第五次循环中，情形同第四次循环一样，因此 "),s("code",[t._v("diff")]),t._v(" 后创建了 B 真实节点 插入到前一次创建的 A 节点后面。同时旧节点的 "),s("code",[t._v("startIndex")]),t._v("移动到了 C，新节点的 startIndex 移动到了 F")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static001.infoq.cn/resource/image/16/86/16cf0ef90f6e19d26c0ddffeca067e86.png",alt:"img"}})]),t._v(" "),s("p",[t._v("新节点的 "),s("code",[t._v("startIndex")]),t._v(" 已经大于 "),s("code",[t._v("endIndex")]),t._v(" 了，需要创建 "),s("code",[t._v("newStartIdx")]),t._v(" 和 "),s("code",[t._v("newEndIdx")]),t._v(" 之间的所有节点，也就是节点F，直接创建 F 节点对应的真实节点放到 B 节点后面")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static001.infoq.cn/resource/image/dc/ad/dc215b45682cf6c9cc4700a5425673ad.png",alt:"img"}})]),t._v(" "),s("h4",{attrs:{id:"_13、vue-router两种模式的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13、vue-router两种模式的区别"}},[t._v("#")]),t._v(" 13、vue-router两种模式的区别")]),t._v(" "),s("h5",{attrs:{id:"hash模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash模式"}},[t._v("#")]),t._v(" "),s("strong",[t._v("hash模式")])]),t._v(" "),s("p",[t._v("原理")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onhashchange")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("oldURL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("newURL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" hash "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("每次hash 值变化，会触发hashchange这个事件，通过这个事件我们就可以直到hash值发生了哪些变化。这样便可以监听hashchange来实现更新页面部分内容的操作。")]),t._v(" "),s("p",[s("strong",[t._v("HashHistory有两个方法")]),t._v("：HashHistory.push()将新路由添加到浏览器访问历史的栈顶 和 HashHistory.replace()替换掉当前栈顶的路由")]),t._v(" "),s("h5",{attrs:{id:"history模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history模式"}},[t._v("#")]),t._v(" history模式")]),t._v(" "),s("p",[t._v("原理")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("history"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stateObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwindow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("history"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stateObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("pushState() 和 replaceState()。通过这两个 API")]),t._v(" "),s("p",[t._v("（1）可以改变 url 地址且不会发送请求，")]),t._v(" "),s("p",[t._v("（2）不仅可以读取历史记录栈，还可以对浏览器历史记录栈进行修改。")]),t._v(" "),s("p",[t._v("除此之外，还有popState().当浏览器跳转到新的状态时，将触发popState事件.")]),t._v(" "),s("p",[t._v("拓展：")]),t._v(" "),s("p",[s("strong",[t._v("$router与$route的区别")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("$route从当前router跳转对象里面可以获取name、path、query、params等（"),s("code",[t._v("<router-link>")]),t._v("传的参数由 this.$route.query或者 this.$route.params 接收）")])]),t._v(" "),s("li",[s("p",[t._v("$router为VueRouter实例。想要导航到不同URL，则使用$router.push方法；返回上一个history也是使用$router.go方法")])])]),t._v(" "),s("h3",{attrs:{id:"三、最后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、最后"}},[t._v("#")]),t._v(" 三、最后")]),t._v(" "),s("p",[t._v("以上内容可根据需要，可对其进行更深刻的理解，比如原理等")])])}),[],!1,null,null,null);s.default=v.exports}}]);